openapi: 3.0.0
info:
  title: Karza
  description: please add your description
  version: 1.0.0

servers:
  - url: http://api.aubankuat.in

paths:
  /KarzaAddressMatchRestService/AddressMatch:
    post:
      summary: AddressMatch
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Address2:
                  type: string
                Address1:
                  type: string
            example: 
{
"RequestId":  	"23434234"	,
"OriginatingChannel":  	"GETP"	,
"Address2":  	"FLAT NO-52,MYTHREYA APARTMENTS,FLOOR NO-2,ROAD NO-3 NR DATA MANDIR 411015"	,
"Address1":  	"FLAT NO-52,MYTHREYA APARTMENTS,FLOOR NO-2,ROAD NO-3 NR DATA MANDIR 411015"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/FSSAILicenseAuth:
    post:
      summary: FSSAILicenseAuth
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Consent:
                  type: string
                RegNo:
                  type: string
            example: {
	"RequestId":"63773dbxghznxbxgh7e7e",
	"OriginatingChannel":"FOS",
  "Consent": "Y",
  "RegNo": "10013022002245"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/CAMembershipAuth:
    post:
      summary: CAMembershipAuth
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Consent:
                  type: string
                MembershipNo:
                  type: string
                ContactDetails:
                  type: string
            example: {
"RequestId":"63773dbxghznxbxgh7e7e",
"OriginatingChannel":"FOS",
"Consent": "Y",
"MembershipNo": "235400",
"ContactDetails":"true"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/ICSIMembership:
    post:
      summary: ICSIMembership
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Consent:
                  type: string
                MembershipNo:
                  type: string
                CpNo:
                  type: string
            example: {
"RequestId":"5367536BVHHGD54737",
"OriginatingChannel":"FOS",
"Consent":"Y",
"MembershipNo":"A4567",
"CpNo": ""
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/ICWAIFirmAuth:
    post:
      summary: ICWAIFirmAuth
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Consent:
                  type: string
                RegNo:
                  type: string
            example: {
"RequestId":"567386vvfhsnfrcc67",
"OriginatingChannel":"FOS",
"Consent":"Y",
"RegNo":"000023"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/ICWAIMembershipAuth:
    post:
      summary: ICWAIMembershipAuth
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Consent:
                  type: string
                MembershipNo:
                  type: string
            example: {
"RequestId":"bbdhh546378vv",
"OriginatingChannel":"FOS",
"Consent":"Y",
"MembershipNo":"14530"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/IECDetailed:
    post:
      summary: IECDetailed
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                Iec:
                  type: string
                Consent:
                  type: string
            example: {
"RequestId":"BBGGHUEUBEFEK343",
"OriginatingChannel":"FOS",
  "Iec": "0388066415",
  "Consent": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/NMCMembershipAuth:
    post:
      summary: NMCMembershipAuth
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                RequestId:
                  type: string
                OriginatingChannel:
                  type: string
                RegistrationNo:
                  type: string
                YearOfReg:
                  type: string
                MedicalCouncil:
                  type: string
                Consent:
                  type: string
            example: {
"RequestId":"567386vvfhsnfrcc67",
"OriginatingChannel":"FOS",
  "RegistrationNo": "2010103028",
  "YearOfReg": "2010",
  "MedicalCouncil": "Maharashtra Medical Council",
  "Consent": "y"
 } 
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaEmployeeService/employementSearch:
    post:
      summary: employementSearch
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                employer:
                  type: string
                name:
                  type: string
                requestId:
                  type: string
                channel:
                  type: string
                mobile:
                  type: string
                emailId:
                  type: string
            example: {

  "employer": "Karza Technologies Private Limited",
  "name": "Alok Kumar",
  "requestId": "8917293612",
  "channel": "DEC",
  "mobile": "7506271007",
  "emailId": "alok@karza.in"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaEmployeeService/employment-verification-advanced:
    post:
      summary: employment-verification-advanced
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                uans:
                  type: array
                  items :
                   type : string
                entityId:
                  type: string
                employerName:
                  type: string
                employeeName:
                  type: string
                mobile:
                  type: string
                emailId:
                  type: string
                pdf:
                  type: boolean
            example: {
"requestId": "8917293612",
  "channel": "DEC",
  "uans": [
    "100414119974"
  ],
  "entityId": "U74120MH2015PTC265316",
  "employerName": "Karza Technologies Private Limited",
  "employeeName": "Swarnava Maitra",
  "mobile": "8450939766",
  "emailId": "swarnava.m@karza.in",
  "pdf": true
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaEmployeeService/employeeSearch:
    post:
      summary: employeeSearch
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                employeeName:
                  type: string
                kid:
                  type: string
            example: {
	"requestId": "Alok Kumar",
	"channel": "Alok Kumar",
	"employeeName": "Alok Kumar",
	"kid": "U74120MH2015PTC265316"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaAPIsService/shop:
    post:
      summary: Shop
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                regNo:
                  type: string
                areaCode:
                  type: string
                consent:
                  type: string
                pdfRequired:
                  type: boolean
            example: {
	"requestId":"817231723",
	"channel":"JCTB",
	"regNo": "2017000456",
	"areaCode": "DL",
	"consent": "Y",
	"pdfRequired": false
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaGSTServiceV1/gstpan:
    post:
      summary: GSTSearchByPAN
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestid:
                  type: string
                channel:
                  type: string
                consent:
                  type: string
                pan:
                  type: string
            example: 
{
	"requestid": "DEC817236123",
	"channel": "DEC",
	"consent": "Y",
	"pan": "AAACR5055K"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaGSTServiceV1/gstreturn:
    post:
      summary: gstreturn
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                dueInfo:
                  type: string
                gstin:
                  type: string
                consent:
                  type: string
            example: {
	"requestId": "DEC8716231",
	"channel": "DEC",
	"dueInfo": "true",
	"gstin": "27AEQPC4716B1ZS",
	"consent": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaGSTServiceV1/verifypan:
    post:
      summary: GST Verify
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                gstin:
                  type: string
                consent:
                  type: string
            example: {
	"requestId": "DEC817237612",
	"channel": "DEC",
	"gstin": "27AAACR5055K1Z7",
	"consent": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaService/NameMatch:
    post:
      summary: NameMatch
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                preset:
                  type: string
                name2:
                  type: string
                type:
                  type: string
                name1:
                  type: string
            example: {
	"requestId": "S1711225812150595",
	"channel": "GETP",
	"preset": "L",
	"name2": "ram Kumar",
	"type": "individual",
	"name1": "RAM kumar"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaOCRKYCService/OCRKYC:
    post:
      summary: OCRKYC
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                file:
                  type: string
                requiredConfidence:
                  type: boolean
                pdfPassword:
                  type: string
                requiredOcr:
                  type: boolean
                fileBase64:
                  type: string
                url:
                  type: string
                returnQualityChecks:
                  type: array
                  items :
                   type : string
            example: {
"file":  	""	,
"requiredConfidence":  	true	,
"pdfPassword":  	""	,
"requiredOcr":  	true	,
"fileBase64":  	""	,
"url":  	""	,
"returnQualityChecks":  	[ "ALL" ]
}

      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaPinCodeService/getDistance:
    post:
      summary: PinCode Distance
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                fromPincode:
                  type: string
                toPincode:
                  type: string
                acceptableDistance:
                  type: number
                consent:
                  type: string
            example: {
	"requestId": "TWL9812983123",
	"channel": "TWL",
	"fromPincode": "560093",
	"toPincode": "400007",
	"acceptableDistance": 6,
	"consent": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaProfileService/vahanPaid:
    post:
      summary: VahanPaid
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                chassisNo:
                  type: string
                engineNo:
                  type: string
                regNo:
                  type: string
                filename:
                  type: string
                vahanUsername:
                  type: string
                vahanPassword:
                  type: string
                consent:
                  type: string
            example: {
"requestId": "",
          "channel": "",
	"chassisNo": null,
	"engineNo": null,
	"regNo": "HR38W0322",
	"filename": null,
	"vahanUsername": "278747",
	"vahanPassword": "vahan0101@AU",
	"consent": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaProfileService/karzaOCR:
    post:
      summary: KarzaOCRService
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                file_b64:
                  type: string
                password:
                  type: string
            example: {
	"requestId": "1234",
	"channel": "CBS",
	"file_b64": "base64 value",
	"password": "XXXX"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaProfileService/profileMatch:
    post:
      summary: ProfileMatch
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                source:
                  type: object
                  properties:
                    name:
                      type: object
                      properties:
                        first:
                          type: string
                        middle:
                          type: string
                        last:
                          type: string
                    relationNames:
                      type: array
                      items :
                       type : object
                       properties:
                         relationReference:
                           type: string
                         name:
                           type: object
                           properties:
                             first:
                               type: string
                             middle:
                               type: string
                             last:
                               type: string
                    addresses:
                      type: array
                      items :
                       type : object
                       properties:
                         addressLine1:
                           type: string
                         addressLine2:
                           type: string
                         city:
                           type: string
                         locality:
                           type: string
                         state:
                           type: string
                         district:
                           type: string
                         pincode:
                           type: string
                         country:
                           type: string
                    dob:
                      type: string
                target:
                  type: array
                  items :
                   type : object
                   properties:
                     referenceId:
                       type: string
                     name:
                       type: object
                       properties:
                         first:
                           type: string
                         middle:
                           type: string
                         last:
                           type: string
                     relationNames:
                       type: array
                       items :
                        type : object
                        properties:
                          relationReference:
                            type: string
                          name:
                            type: object
                            properties:
                              first:
                                type: string
                              middle:
                                type: string
                              last:
                                type: string
                     addresses:
                       type: array
                       items :
                        type : object
                        properties:
                          addressLine1:
                            type: string
                          addressLine2:
                            type: string
                          city:
                            type: string
                          locality:
                            type: string
                          state:
                            type: string
                          district:
                            type: string
                          pincode:
                            type: string
                          country:
                            type: string
                     dob:
                       type: string
                clientData:
                  type: object
                  properties:
                    caseId:
                      type: string
            example: {
		"requestId": "1234",
	"channel": "CBS",
  "source": {
    "name": {
      "first": "Junaid",
      "middle": "Khan",
      "last": ""
    },
    "relationNames": [
      {
        "relationReference": "FATHER",
        "name": {
          "first": "abc",
          "middle": "def",
          "last": "ghi"
        }
      }
    ],
    "addresses": [
      {
        "addressLine1": "address1",
        "addressLine2": "address2",
        "city": "mumbai",
        "locality": "jogeshwari",
        "state": "maha",
        "district": "mum",
        "pincode": "400102",
        "country": "IN"
      }
    ],
    "dob": "1995-01-01"
  },
  "target": [
    {
      "referenceId": "1",
      "name": {
        "first": "Junaid",
        "middle": "Khan",
        "last": ""
      },
      "relationNames": [
        {
          "relationReference": "FATHER",
          "name": {
            "first": "abc",
            "middle": "def",
            "last": "ghi"
          }
        }
      ],
      "addresses": [
        {
          "addressLine1": "add400102 1111111",
          "addressLine2": "add2",
          "city": "dum",
          "locality": "andheri",
          "state": "Mah",
          "district": "Mumbai",
          "pincode": "400056",
          "country": "India"
        }
      ],
      "dob": "1995-01-01"
    }
  ],
  "clientData": {
    "caseId": "12345"
  }
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/OCRCheque:
    post:
      summary: OCRCheque
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                channel:
                  type: string
                fileB64:
                  type: string
            example: {
      "requestId" : "812737",
      "channel" : "HFT",
      "fileB64" : "base64 value"
    }
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/AddressSplit:
    post:
      summary: AddressSplit
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                address:
                  type: string
                consent:
                  type: string
                ReqId:
                  type: string
                Channel:
                  type: string
                version:
                  type: string
            example: {
	"address": "abc,roadno:9,Kailash hills, Gajularamaram,Hyderabad,500055",
	"consent": "Y",
	"ReqId": "187238712736",
	"Channel": "SFDC",
	"version": "2.1"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/Tan:
    get:
      summary: TAN
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: tan
               required: true
               schema:
                 type: string
               example:
                 HYDD00592E
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/gas:
    get:
      summary: Gas
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: lpg_id
               required: true
               schema:
                 type: string
               example:
                 10000000050431060
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/ebill:
    get:
      summary: ElectricityBill
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: consumer_id
               required: true
               schema:
                 type: string
               example:
                 1012395000
             - in: query
               name: service_provider
               required: true
               schema:
                 type: string
               example:
                 BESCOM
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/voterid:
    get:
      summary: voterid
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: epic_no
               required: true
               schema:
                 type: string
               example:
                 S131820140050271
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/drivinglicense:
    get:
      summary: drivinglicense
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: dl_no
               required: true
               schema:
                 type: string
               example:
                 MH0120130001960
             - in: query
               name: dob
               required: true
               schema:
                 type: string
               example:
                 05-10-1994
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/cin:
    get:
      summary: cin
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: company_name
               required: true
               schema:
                 type: string
               example:
                 Reliance
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/BankAccVerification:
    get:
      summary: BankAccVerification
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: IFSC
               required: true
               schema:
                 type: string
               example:
                 AUBL0002011
             - in: query
               name: AccNum
               required: true
               schema:
                 type: string
               example:
                 20182323232323333
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/ifsc:
    get:
      summary: ifsc
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: Ifsc
               required: true
               schema:
                 type: string
               example:
                 AUBL0002011
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/ITR:
    get:
      summary: ITR
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: PAN
               required: true
               schema:
                 type: string
               example:
                 AHDPN6063G
             - in: query
               name: Ack
               required: true
               schema:
                 type: string
               example:
                 817263761275375123
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/Company&LLPMasterData:
    get:
      summary: Company&LLPMasterData
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: cin
               required: true
               schema:
                 type: string
               example:
                 U74120MH2015PTC265316
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/VehicleRCAuthenticationAdvanced:
    get:
      summary: VehicleRCAuthenticationAdvanced
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: registrationNumber
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/ITRFormParsing:
    get:
      summary: ITRFormParsing
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: username
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
             - in: query
               name: password
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/ITRReturnForms:
    get:
      summary: ITRReturnForms
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: username
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
             - in: query
               name: password
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
             - in: query
               name: additionalData
               required: true
               schema:
                 type: string
               example:
                 true
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/PassportVerification:
    get:
      summary: PassportVerification
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: fileNo
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
             - in: query
               name: dob
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
             - in: query
               name: passportNo
               required: true
               schema:
                 type: string
               example:
                 true
             - in: query
               name: doi
               required: true
               schema:
                 type: string
               example:
                 
             - in: query
               name: name
               required: true
               schema:
                 type: string
               example:
                 
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/ITRReturnSalaried:
    get:
      summary: ITRReturnSalaried
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: username
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
             - in: query
               name: password
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
             - in: query
               name: additionalData
               required: true
               schema:
                 type: string
               example:
                 true
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/PNGAuthentication:
    get:
      summary: PNGAuthentication
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: consumer_id
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
             - in: query
               name: bp_no
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
             - in: query
               name: service_provider
               required: true
               schema:
                 type: string
               example:
                 true
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/UdyogAadharNumber:
    get:
      summary: UdyogAadharNumber
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: uan
               required: true
               schema:
                 type: string
               example:
                 TS02FD9729
             - in: query
               name: mobile
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/EmailAuthenticationAdvanced:
    get:
      summary: EmailAuthenticationAdvanced
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: email
               required: true
               schema:
                 type: string
               example:
                 anil.neelam@gmail.com
             - in: query
               name: individualName
               required: true
               schema:
                 type: string
               example:
                 Ban12u32
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/DigitalEmailAuthentication:
    get:
      summary: DigitalEmailAuthentication
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: email
               required: true
               schema:
                 type: string
               example:
                 anil.neelam@gmail.com
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /Karza/26ASFetch:
    get:
      summary: 26ASFetch
      parameters:
             - in: query
               name: ReqId
               required: true
               schema:
                 type: string
               example:
                 371238123
             - in: query
               name: Channel
               required: true
               schema:
                 type: string
               example:
                 CBDT
             - in: query
               name: consent
               required: true
               schema:
                 type: string
               example:
                 y
             - in: query
               name: username
               required: true
               schema:
                 type: string
               example:
                 anil.neelam@gmail.com
             - in: query
               name: password
               required: true
               schema:
                 type: string
               example:
                 716263
             - in: query
               name: source
               required: true
               schema:
                 type: string
               example:
                 ITR
             - in: query
               name: years
               required: true
               schema:
                 type: string
               example:
                 2022-23
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaUdyamRegistrationService/udhyamAuth:
    post:
      summary: UdhyamAuth
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                guid:
                  type: string
                channel:
                  type: string
                consent:
                  type: string
                udyamRegistrationNo:
                  type: string
                isPDFRequired:
                  type: string
            example: {
	"guid": "9812837",
	"channel": "AUCA",
	"consent": "Y",
	"udyamRegistrationNo": "UDYAM-MP-23-0007772",
	"isPDFRequired": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaUdyamRegistrationService/otp:
    post:
      summary: /KarzaUdyamRegistrationService_otp
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                guid:
                  type: string
                channel:
                  type: string
                consent:
                  type: string
                udyamRegistrationNo:
                  type: string
                mobile:
                  type: string
                isPDFRequired:
                  type: string
                getEnterpriseDetails:
                  type: string
            example: {
	"guid": "9812837",
	"channel": "AUCA",
"consent": "Y",
  "udyamRegistrationNo": "UDYAM-MP-23-0007772",
  "mobile": "8********9",
  "isPDFRequired": "Y",
  "getEnterpriseDetails": "Y"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}
  /KarzaUdyamRegistrationService/verify:
    post:
      summary: /KarzaUdyamRegistrationService/verify
      requestBody:
        required: true
        content:
          json/application:
            schema:
              type: object
              properties:
                guid:
                  type: string
                channel:
                  type: string
                requestId:
                  type: string
                otp:
                  type: string
            example: {
	"guid": "9812837",
	"channel": "AUCA",
 "requestId": "568795af-6697-473f-95f7-cde50bb23c4b",
  "otp": "186282"
}
      responses:
        "200":
          description: it is an example response
          content:
            JSON/application:
              schema:
                type: object
              example:
                {}